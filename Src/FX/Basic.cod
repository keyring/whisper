//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 g_world;                   // Offset:    0, size:   64
    float4x4 g_worldViewProj;           // Offset:   64, size:   64
    float4x4 g_worldInvTranspose;       // Offset:  128, size:   64
    float4x4 g_texTransform;            // Offset:  192, size:   64
    Material g_material;                // Offset:  256, size:   64
}

cbuffer cbPerFrame
{
    DirectLight g_directLights[3];      // Offset:    0, size:  192
    float3  g_eyePos;                   // Offset:  192, size:   12
}

//
// 3 local object(s)
//
Texture2D g_diffuseMap;
TextureCube g_cubeMap;
SamplerState samAnisotropic
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 7 technique(s)
    //
    technique11 Light1
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                nop 
                mov r2.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r3.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r4.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r5.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r6.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r7.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r8.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                mul r2.xyzw, r2.xyzw, r5.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r5.xyz, -r8.xyzx
                dp3 r0.y, r5.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r5.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r3.xyzw, r3.xyzw, r0.wwww
                mul r3.xyzw, r6.xyzw, r3.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r4.xyzw, r0.xxxx
                mul r0.xyzw, r7.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r3.xyzw, r1.wwww, r3.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r2.xyzw, r2.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r3.xyzw, r3.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r2.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 50 instruction slots used
                            
            };
        }

    }

    technique11 Light2
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 12
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                nop 
                mov r2.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r3.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r4.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r5.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r6.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r7.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r8.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                mul r5.xyzw, r2.xyzw, r5.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r8.y, r8.xyzx, r0.xyzx
                add r8.y, r8.y, r8.y
                mov r8.y, -r8.y
                mul r8.y, r0.x, r8.y
                add r8.x, r8.x, r8.y  // v<0:NaN:Inf>
                dp3 r8.x, r8.xxxx, r1.xyzx
                max r8.x, r8.x, l(0.000000)
                log r8.x, r8.x
                mul r8.x, r4.w, r8.x
                exp r8.x, r8.x  // specFactor<0:NaN:Inf>
                mul r9.xyzw, r3.xyzw, r0.wwww
                mul r6.xyzw, r6.xyzw, r9.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r8.xyzw, r4.xyzw, r8.xxxx
                mul r7.xyzw, r7.xyzw, r8.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r6.xyzw, r1.wwww, r6.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r5.xyzw, r5.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r6.xyzw, r6.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r7.xyzw, r7.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r8.xyzw, cb1[4].xyzw  // L<0,1,2,3>
                mov r9.xyzw, cb1[5].xyzw  // L<4,5,6,7>
                mov r10.xyzw, cb1[6].xyzw  // L<8,9,10,11>
                mov r11.xyz, cb1[7].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                mul r2.xyzw, r2.xyzw, r8.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r0.y, r8.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r8.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r3.xyzw, r3.xyzw, r0.wwww
                mul r3.xyzw, r9.xyzw, r3.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r4.xyzw, r0.xxxx
                mul r0.xyzw, r10.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r3.xyzw, r1.wwww, r3.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r2.xyzw, r2.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r3.xyzw, r3.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r2.xyzw, r5.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r2.xyzw, r3.xyzw, r6.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r7.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 82 instruction slots used
                            
            };
        }

    }

    technique11 Light3
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 109
                nop 
                mov r2.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r3.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r4.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r5.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r6.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r7.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r8.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                mul r5.xyzw, r2.xyzw, r5.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r8.y, r8.xyzx, r0.xyzx
                add r8.y, r8.y, r8.y
                mov r8.y, -r8.y
                mul r8.y, r0.x, r8.y
                add r8.x, r8.x, r8.y  // v<0:NaN:Inf>
                dp3 r8.x, r8.xxxx, r1.xyzx
                max r8.x, r8.x, l(0.000000)
                log r8.x, r8.x
                mul r8.x, r4.w, r8.x
                exp r8.x, r8.x  // specFactor<0:NaN:Inf>
                mul r9.xyzw, r3.xyzw, r0.wwww
                mul r6.xyzw, r6.xyzw, r9.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r8.xyzw, r4.xyzw, r8.xxxx
                mul r7.xyzw, r7.xyzw, r8.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r6.xyzw, r1.wwww, r6.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r5.xyzw, r5.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r6.xyzw, r6.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r7.xyzw, r7.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r5.xyzw, r5.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r8.xyzw, cb1[4].xyzw  // L<0,1,2,3>
                mov r9.xyzw, cb1[5].xyzw  // L<4,5,6,7>
                mov r10.xyzw, cb1[6].xyzw  // L<8,9,10,11>
                mov r11.xyz, cb1[7].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                mul r8.xyzw, r2.xyzw, r8.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r11.xyz, -r11.xyzx
                dp3 r11.y, r11.xyzx, r0.xyzx
                add r11.y, r11.y, r11.y
                mov r11.y, -r11.y
                mul r11.y, r0.x, r11.y
                add r11.x, r11.x, r11.y  // v<0:NaN:Inf>
                dp3 r11.x, r11.xxxx, r1.xyzx
                max r11.x, r11.x, l(0.000000)
                log r11.x, r11.x
                mul r11.x, r4.w, r11.x
                exp r11.x, r11.x  // specFactor<0:NaN:Inf>
                mul r12.xyzw, r3.xyzw, r0.wwww
                mul r9.xyzw, r9.xyzw, r12.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r11.xyzw, r4.xyzw, r11.xxxx
                mul r10.xyzw, r10.xyzw, r11.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r9.xyzw, r1.wwww, r9.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r10.xyzw, r1.wwww, r10.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r8.xyzw, r8.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r9.xyzw, r9.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r10.xyzw, r10.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r5.xyzw, r5.xyzw, r8.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r6.xyzw, r6.xyzw, r9.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, r10.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r8.xyzw, cb1[8].xyzw  // L<0,1,2,3>
                mov r9.xyzw, cb1[9].xyzw  // L<4,5,6,7>
                mov r10.xyzw, cb1[10].xyzw  // L<8,9,10,11>
                mov r11.xyz, cb1[11].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r11.xyz, -r11.xyzx  // lightVec<0,1,2>
                mul r2.xyzw, r2.xyzw, r8.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r11.xyzx
                dp3 r0.y, r8.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r8.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r3.xyzw, r3.xyzw, r0.wwww
                mul r3.xyzw, r9.xyzw, r3.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r4.xyzw, r0.xxxx
                mul r0.xyzw, r10.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r3.xyzw, r1.wwww, r3.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r2.xyzw, r2.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r3.xyzw, r3.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r2.xyzw, r5.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r2.xyzw, r3.xyzw, r6.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r7.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 114 instruction slots used
                            
            };
        }

    }

    technique11 Light0Tex
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // g_diffuseMap                      texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 88 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 96
                mov r0.xyzw, r0.xyzw  // finalColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:Inf,1:Inf,2:Inf,3:Inf>
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 Light1Tex
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // g_diffuseMap                      texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 10
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 88
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 109
                nop 
                mov r3.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r4.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r5.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r6.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r7.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r8.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r9.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                mul r3.xyzw, r3.xyzw, r6.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r6.xyz, -r9.xyzx
                dp3 r0.y, r6.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r6.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r4.xyzw, r4.xyzw, r0.wwww
                mul r4.xyzw, r7.xyzw, r4.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r5.xyzw, r0.xxxx
                mul r0.xyzw, r8.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r4.xyzw, r1.wwww, r4.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r3.xyzw, r3.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r4.xyzw, r4.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r3.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 51 instruction slots used
                            
            };
        }

    }

    technique11 Light2Tex
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // g_diffuseMap                      texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 13
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 88
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 109
                nop 
                mov r3.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r4.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r5.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r6.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r7.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r8.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r9.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                mul r6.xyzw, r3.xyzw, r6.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r9.y, r9.xyzx, r0.xyzx
                add r9.y, r9.y, r9.y
                mov r9.y, -r9.y
                mul r9.y, r0.x, r9.y
                add r9.x, r9.x, r9.y  // v<0:NaN:Inf>
                dp3 r9.x, r9.xxxx, r1.xyzx
                max r9.x, r9.x, l(0.000000)
                log r9.x, r9.x
                mul r9.x, r5.w, r9.x
                exp r9.x, r9.x  // specFactor<0:NaN:Inf>
                mul r10.xyzw, r4.xyzw, r0.wwww
                mul r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r9.xyzw, r5.xyzw, r9.xxxx
                mul r8.xyzw, r8.xyzw, r9.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r8.xyzw, r1.wwww, r8.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r6.xyzw, r6.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r7.xyzw, r7.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r8.xyzw, r8.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r9.xyzw, cb1[4].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb1[5].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb1[6].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb1[7].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                mul r3.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r0.y, r9.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r9.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r4.xyzw, r4.xyzw, r0.wwww
                mul r4.xyzw, r10.xyzw, r4.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r5.xyzw, r0.xxxx
                mul r0.xyzw, r11.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r4.xyzw, r1.wwww, r4.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r3.xyzw, r3.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r4.xyzw, r4.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r3.xyzw, r6.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r3.xyzw, r4.xyzw, r7.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r8.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 83 instruction slots used
                            
            };
        }

    }

    technique11 Light3Tex
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 54 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[8].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[9].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[10].xyzx  // vout<9:NaN:Inf>
                
                #line 58
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[7].xyzw  // vout<3:NaN:Inf>
                
                #line 61
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[12].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[13].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 g_world;                  // Offset:    0 Size:    64 [unused]
                //   float4x4 g_worldViewProj;          // Offset:   64 Size:    64 [unused]
                //   float4x4 g_worldInvTranspose;      // Offset:  128 Size:    64 [unused]
                //   float4x4 g_texTransform;           // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  256
                //       float4 Diffuse;                // Offset:  272
                //       float4 Specular;               // Offset:  288
                //       float4 Reflect;                // Offset:  304
                //
                //   } g_material;                      // Offset:  256 Size:    64
                //
                // }
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float unuse;                   // Offset:   60
                //
                //   } g_directLights[3];               // Offset:    0 Size:   192
                //   float3 g_eyePos;                   // Offset:  192 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samAnisotropic                    sampler      NA          NA    0        1
                // g_diffuseMap                      texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbPerFrame                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_constantbuffer cb1[13], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 14
                
                #line 72 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                
                #line 75
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[12].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                
                #line 81
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 88
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 109
                nop 
                mov r3.xyzw, cb0[16].xyzw  // mater<0,1,2,3>
                mov r4.xyzw, cb0[17].xyzw  // mater<4,5,6,7>
                mov r5.xyzw, cb0[18].xyzw  // mater<8,9,10,11>
                mov r6.xyzw, cb1[0].xyzw  // L<0,1,2,3>
                mov r7.xyzw, cb1[1].xyzw  // L<4,5,6,7>
                mov r8.xyzw, cb1[2].xyzw  // L<8,9,10,11>
                mov r9.xyz, cb1[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "Light.fx"
                mov r9.xyz, -r9.xyzx  // lightVec<0,1,2>
                mul r6.xyzw, r3.xyzw, r6.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r9.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r9.xyzx
                dp3 r9.y, r9.xyzx, r0.xyzx
                add r9.y, r9.y, r9.y
                mov r9.y, -r9.y
                mul r9.y, r0.x, r9.y
                add r9.x, r9.x, r9.y  // v<0:NaN:Inf>
                dp3 r9.x, r9.xxxx, r1.xyzx
                max r9.x, r9.x, l(0.000000)
                log r9.x, r9.x
                mul r9.x, r5.w, r9.x
                exp r9.x, r9.x  // specFactor<0:NaN:Inf>
                mul r10.xyzw, r4.xyzw, r0.wwww
                mul r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r9.xyzw, r5.xyzw, r9.xxxx
                mul r8.xyzw, r8.xyzw, r9.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r7.xyzw, r1.wwww, r7.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r8.xyzw, r1.wwww, r8.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r6.xyzw, r6.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r7.xyzw, r7.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r8.xyzw, r8.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r6.xyzw, r6.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                add r7.xyzw, r7.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r9.xyzw, cb1[4].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb1[5].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb1[6].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb1[7].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                mul r9.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r12.xyz, -r12.xyzx
                dp3 r12.y, r12.xyzx, r0.xyzx
                add r12.y, r12.y, r12.y
                mov r12.y, -r12.y
                mul r12.y, r0.x, r12.y
                add r12.x, r12.x, r12.y  // v<0:NaN:Inf>
                dp3 r12.x, r12.xxxx, r1.xyzx
                max r12.x, r12.x, l(0.000000)
                log r12.x, r12.x
                mul r12.x, r5.w, r12.x
                exp r12.x, r12.x  // specFactor<0:NaN:Inf>
                mul r13.xyzw, r4.xyzw, r0.wwww
                mul r10.xyzw, r10.xyzw, r13.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r12.xyzw, r5.xyzw, r12.xxxx
                mul r11.xyzw, r11.xyzw, r12.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r10.xyzw, r1.wwww, r10.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r11.xyzw, r1.wwww, r11.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r9.xyzw, r9.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r10.xyzw, r10.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r11.xyzw, r11.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r6.xyzw, r6.xyzw, r9.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r7.xyzw, r7.xyzw, r10.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r8.xyzw, r8.xyzw, r11.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109
                nop 
                mov r9.xyzw, cb1[8].xyzw  // L<0,1,2,3>
                mov r10.xyzw, cb1[9].xyzw  // L<4,5,6,7>
                mov r11.xyzw, cb1[10].xyzw  // L<8,9,10,11>
                mov r12.xyz, cb1[11].xyzx  // L<12,13,14>
                
                #line 70 "Light.fx"
                mov r12.xyz, -r12.xyzx  // lightVec<0,1,2>
                mul r3.xyzw, r3.xyzw, r9.xyzw  // ambient<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r0.w, r12.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 78
                lt r1.w, l(0.000000), r0.w
                mov r9.xyz, -r12.xyzx
                dp3 r0.y, r9.xyzx, r0.xyzx
                add r0.y, r0.y, r0.y
                mov r0.y, -r0.y
                mul r0.x, r0.y, r0.x
                add r0.x, r9.x, r0.x  // v<0:NaN:Inf>
                dp3 r0.x, r0.xxxx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r5.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r4.xyzw, r4.xyzw, r0.wwww
                mul r4.xyzw, r10.xyzw, r4.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r5.xyzw, r0.xxxx
                mul r0.xyzw, r11.xyzw, r0.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 78
                movc r4.xyzw, r1.wwww, r4.xyzw, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 109 "D:\documents\GitHub\whisper\Src\FX\Basic.fx"
                mov r3.xyzw, r3.xyzw  // A<0:Inf,1:Inf,2:Inf,3:Inf>
                mov r4.xyzw, r4.xyzw  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov r0.xyzw, r0.xyzw  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r1.xyzw, r3.xyzw, r6.xyzw  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r3.xyzw, r4.xyzw, r7.xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                add r0.xyzw, r0.xyzw, r8.xyzw  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 116
                add r1.xyzw, r1.xyzw, r3.xyzw
                mul r1.xyzw, r1.xyzw, r2.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 131
                mov o0.xyzw, r0.xyzw  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 115 instruction slots used
                            
            };
        }

    }

}

